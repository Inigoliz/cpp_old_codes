/* Funcion RK2 (pendiente media) para resolver ODEs*/

void RK2(mivector<double> (*f)(double,mivector<double>),double t0, mivector<double> y0, double tau, int n, int ndim, mivector<double> *y){
  
// como yrk2  (y) es el conjunto de omega y theta para 300 instantes de tiempo, es como un "puntero"
  // y0 contiene las condiciones iniciales, donde y0[0]=omega0; y0[1]=theta0

  // IMP sintaxis; y[tiempo][0 o 1]: 0:omega; 1:theta
  y[0][0] = y0[0];
  y[0][1] = y0[1];
  // IMP y[t] coge las dos filas para un instante de tiempo

  mivector<double> ys(ndim); // vector auxiliar para el RK2 (mirar teoria)
  double t;
  t = t0; // como se declaran las condiciones iniciales, se inicializa en el primer instante de tiempo

  for(int i = 0; i<n; i++){ // i=0 son las condiciones iniciales
    t = t0 + i*tau;
    ys = y[i] + tau*f(t, y[i]);
    y[i+1] = y[i] +0.5*tau*(f(t, y[i]) + f(t+tau, ys));
    cout<<"RK2 "<<y[i][1]<<endl;
  }
}
